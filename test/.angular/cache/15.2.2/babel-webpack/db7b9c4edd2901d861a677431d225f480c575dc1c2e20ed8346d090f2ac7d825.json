{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/professor.service\";\nimport * as i2 from \"src/app/services/student.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction AssignStudentComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const professor_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", professor_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", professor_r2.name, \" \");\n  }\n}\nexport class AssignStudentComponent {\n  onSubmit(_t6) {\n    this.studentService.getStudent(parseInt(this.route.snapshot.paramMap.get('id') || \"\")).subscribe(data => {\n      console.log(data);\n      this.professorService.assignStudent(this.professorId, parseInt(this.route.snapshot.paramMap.get('id') || \"\")).subscribe(prof => {\n        console.log(\"student assigned to professor\");\n        console.log(\"\");\n        this.studentService.assignProfessor(parseInt(this.route.snapshot.paramMap.get('id') || \"\"), this.professorId).subscribe(d => {\n          console.log(\"professor assigned to student\");\n        });\n      });\n      console.log(\"professor: \", this.professorId);\n    });\n  }\n  constructor(professorService, studentService, route) {\n    this.professorService = professorService;\n    this.studentService = studentService;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.professorService.getProfessors().subscribe(data => {\n      this.professors = data;\n    });\n  }\n  studentForm(form) {}\n}\nAssignStudentComponent.ɵfac = function AssignStudentComponent_Factory(t) {\n  return new (t || AssignStudentComponent)(i0.ɵɵdirectiveInject(i1.ProfessorService), i0.ɵɵdirectiveInject(i2.StudentService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nAssignStudentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AssignStudentComponent,\n  selectors: [[\"app-assign-student\"]],\n  decls: 10,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"studentForm\", \"ngForm\"], [\"name\", \"professorId\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"name\"], [\"type\", \"submit\", \"value\", \"assign\"], [3, \"value\"]],\n  template: function AssignStudentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AssignStudentComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(3, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function AssignStudentComponent_Template_select_ngModelChange_3_listener($event) {\n        return ctx.professorId = $event;\n      });\n      i0.ɵɵtemplate(4, AssignStudentComponent_option_4_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Assingn professor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5)(8, \"br\")(9, \"br\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.professorId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.professors);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAoBQA,iCAAoE;IAChEA,YACJ;IAAAA,iBAAS;;;;IAFoCA,kDAAsB;IAC/DA,eACJ;IADIA,kDACJ;;;ACTR,OAAM,MAAOC,sBAAsB;EACnCC,QAAQ,CAACC,GAAW;IAClB,IAAI,CAACC,cAAc,CAACC,UAAU,CAACC,QAAQ,CAAC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,IAAE,EAAE,CAAC,CAAC,CAACC,SAAS,CAACC,IAAI,IAAE;MACnGC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,gBAAgB,CAACC,aAAa,CAAC,IAAI,CAACC,WAAW,EAACX,QAAQ,CAAC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,IAAE,EAAE,CAAC,CAAC,CAACC,SAAS,CAACO,IAAI,IAAG;QAE1HL,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5CD,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;QAEf,IAAI,CAACV,cAAc,CAACe,eAAe,CAACb,QAAQ,CAAC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,IAAE,EAAE,CAAC,EAAC,IAAI,CAACO,WAAW,CAAC,CAACN,SAAS,CAACS,CAAC,IAAE;UACtHP,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAE9C,CAAC,CAAC;MACJ,CAAC,CAAC;MACFD,OAAO,CAACC,GAAG,CAAC,aAAa,EAAC,IAAI,CAACG,WAAW,CAAC;IAE7C,CAAC,CAAC;EACJ;EAOEI,YAAoBN,gBAAkC,EAAUX,cAA6B,EAASG,KAAoB;IAAtG,qBAAgB,GAAhBQ,gBAAgB;IAA4B,mBAAc,GAAdX,cAAc;IAAwB,UAAK,GAALG,KAAK;EAAkB;EAC7He,QAAQ;IACN,IAAI,CAACP,gBAAgB,CAACQ,aAAa,EAAE,CAACZ,SAAS,CAAEC,IAAI,IAAI;MACvD,IAAI,CAACY,UAAU,GAAGZ,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAa,WAAW,CAACC,IAAW,GAEvB;;AAjCWzB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDbnC/B,2BAAK;MAC2BA;QAAAA;QAAA;QAAA,OAAYA,gCAAqB;MAAA,EAAC;MAkB5DA,iCAAqD;MAA7CA;QAAA;MAAA,EAAyB;MAC/BA,6EAES;MACXA,iBAAS;MACTA,gCAAkB;MAAAA,iCAAiB;MAAAA,iBAAQ;MAACA,2BAAoC;MAElFA,iBAAO;;;MAPGA,eAAyB;MAAzBA,yCAAyB;MACDA,eAAa;MAAbA,wCAAa","names":["i0","AssignStudentComponent","onSubmit","_t6","studentService","getStudent","parseInt","route","snapshot","paramMap","get","subscribe","data","console","log","professorService","assignStudent","professorId","prof","assignProfessor","d","constructor","ngOnInit","getProfessors","professors","studentForm","form","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\stagiaire7\\Documents\\GitHub\\Professors-service\\test\\src\\app\\components\\assign-student\\assign-student.component.html","C:\\Users\\stagiaire7\\Documents\\GitHub\\Professors-service\\test\\src\\app\\components\\assign-student\\assign-student.component.ts"],"sourcesContent":["<div>\r\n    <form #studentForm=\"ngForm\" (ngSubmit)=\"onSubmit(studentForm)\">\r\n      <!-- <input type=\"text\" name=\"name\" [(ngModel)]=\"student.name\"/>\r\n      <label for=\"name\"> Full name</label>\r\n      <br /><br />\r\n      <input type=\"text\" name=\"cin\" [(ngModel)]=\"student.cin\"/>\r\n      <label for=\"cin\"> CIN</label>\r\n      <br /><br />\r\n      <input type=\"text\" name=\"email\"  [(ngModel)]=\"student.email\"/>\r\n      <label for=\"email\"> E-mail</label>\r\n      <br /><br />\r\n      <input type=\"text\" name=\"telephone\"  [(ngModel)]=\"student.telephone\"/>\r\n      <label for=\"telephone\"> Phone</label>\r\n      <br /><br />\r\n      <input type=\"text\" name=\"groupe\"  [(ngModel)]=\"student.groupe\"/>\r\n      <label for=\"groupe\"> Groupe</label>\r\n      <br /><br />\r\n      <input type=\"submit\" value=\"add\">\r\n      <br /><br /> -->\r\n      <select [(ngModel)]=\"professorId\" name=\"professorId\">\r\n        <option *ngFor=\"let professor of professors\" value={{professor.id}}>\r\n            {{professor.name}}\r\n        </option>\r\n      </select>\r\n      <label for=\"name\">Assingn professor</label> <input type=\"submit\" value=\"assign\">\r\n      <br /><br />\r\n    </form>\r\n  </div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport Professor from \"src/app/entities/Professor\";\r\nimport Student from \"src/app/entities/Student\";\r\nimport { ProfessorService } from \"src/app/services/professor.service\";\r\nimport { StudentService } from \"src/app/services/student.service\";\r\n\r\n@Component({\r\n  selector: \"app-assign-student\",\r\n  templateUrl: \"./assign-student.component.html\",\r\n  styleUrls: [\"./assign-student.component.css\"],\r\n})\r\nexport class AssignStudentComponent implements OnInit {\r\nonSubmit(_t6: NgForm) {\r\n  this.studentService.getStudent(parseInt(this.route.snapshot.paramMap.get('id')||\"\")).subscribe(data=>{\r\n    console.log(data);\r\n    this.professorService.assignStudent(this.professorId,parseInt(this.route.snapshot.paramMap.get('id')||\"\")).subscribe(prof =>{\r\n      \r\n      console.log(\"student assigned to professor\");\r\n      console.log(\"\");\r\n      \r\n      this.studentService.assignProfessor(parseInt(this.route.snapshot.paramMap.get('id')||\"\"),this.professorId).subscribe(d=>{\r\n        console.log(\"professor assigned to student\");\r\n        \r\n      })\r\n    })\r\n    console.log(\"professor: \",this.professorId);\r\n    \r\n  })\r\n}\r\n\r\n\r\n  professors!: Professor[];\r\n  professorId!: number;\r\n  professor!:Professor;\r\n  student!:Student;\r\n  constructor(private professorService: ProfessorService, private studentService:StudentService,private route:ActivatedRoute) {}\r\n  ngOnInit(): void {\r\n    this.professorService.getProfessors().subscribe((data) => {\r\n      this.professors = data;\r\n    });\r\n  }\r\n\r\n  studentForm(form:NgForm){\r\n    \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}