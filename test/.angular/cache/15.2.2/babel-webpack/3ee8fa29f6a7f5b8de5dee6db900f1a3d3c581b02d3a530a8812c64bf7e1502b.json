{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/professor.service\";\nimport * as i2 from \"@angular/forms\";\nexport class ProfessorFormComponent {\n  constructor(professorService) {\n    this.professorService = professorService;\n    this.professor = {\n      id: 0,\n      name: '',\n      cin: '',\n      subject: '',\n      email: '',\n      telephone: '',\n      etudiants: []\n    };\n  }\n  onSubmit(form) {\n    let newProfessor = Object.assign({}, this.professor); // Create a new Student object with the form data\n    this.professorService.add(newProfessor).subscribe(data => {\n      console.log(\"data sent\", data);\n    });\n    form.reset(); // Reset the form\n  }\n}\n\nProfessorFormComponent.ɵfac = function ProfessorFormComponent_Factory(t) {\n  return new (t || ProfessorFormComponent)(i0.ɵɵdirectiveInject(i1.ProfessorService));\n};\nProfessorFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfessorFormComponent,\n  selectors: [[\"app-professor-form\"]],\n  decls: 31,\n  vars: 5,\n  consts: [[3, \"ngSubmit\"], [\"professorForm\", \"ngForm\"], [\"type\", \"text\", \"name\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"cin\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"cin\"], [\"type\", \"text\", \"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"telephone\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"telephone\"], [\"type\", \"text\", \"name\", \"groupe\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"groupe\"], [\"type\", \"submit\", \"value\", \"add\"]],\n  template: function ProfessorFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function ProfessorFormComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ProfessorFormComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.professor.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \" Full name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\")(7, \"br\");\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ProfessorFormComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.professor.cin = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 5);\n      i0.ɵɵtext(10, \" CIN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\")(12, \"br\");\n      i0.ɵɵelementStart(13, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ProfessorFormComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.professor.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"label\", 7);\n      i0.ɵɵtext(15, \" E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\")(17, \"br\");\n      i0.ɵɵelementStart(18, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function ProfessorFormComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.professor.telephone = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"label\", 9);\n      i0.ɵɵtext(20, \" Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"br\")(22, \"br\");\n      i0.ɵɵelementStart(23, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function ProfessorFormComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.professor.groupe = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"label\", 11);\n      i0.ɵɵtext(25, \" Groupe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\")(27, \"br\")(28, \"input\", 12)(29, \"br\")(30, \"br\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.professor.name);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.professor.cin);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.professor.email);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.professor.telephone);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.professor.groupe);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,sBAAsB;EAWjCC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAVpC,cAAS,GAAc;MACrBC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,GAAG,EAAE,EAAE;MACPC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;KACZ;EAEwD;EACzDC,QAAQ,CAACC,IAAY;IACnB,IAAIC,YAAY,GAAcC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IACjE,IAAI,CAACb,gBAAgB,CAACc,GAAG,CAACJ,YAAY,CAAC,CAACK,SAAS,CAAEC,IAAI,IAAI;MACzDC,OAAO,CAACC,GAAG,CAAC,WAAW,EAACF,IAAI,CAAC;IAC/B,CAAC,CAAC;IACFP,IAAI,CAACU,KAAK,EAAE,CAAC,CAAC;EAChB;;;AAlBWrB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCVnCC,2BAAK;MAC2BA;QAAAA;QAAA;QAAA,OAAYA,gCAAuB;MAAA,EAAC;MAChEA,gCAA6D;MAA9BA;QAAA;MAAA,EAA4B;MAA3DA,iBAA6D;MAC7DA,gCAAkB;MAACA,0BAAS;MAAAA,iBAAQ;MACpCA,qBAAM;MACNA,gCAA2D;MAA7BA;QAAA;MAAA,EAA2B;MAAzDA,iBAA2D;MAC3DA,gCAAiB;MAACA,qBAAG;MAAAA,iBAAQ;MAC7BA,sBAAM;MACNA,iCAAgE;MAA/BA;QAAA;MAAA,EAA6B;MAA9DA,iBAAgE;MAChEA,iCAAmB;MAACA,wBAAM;MAAAA,iBAAQ;MAClCA,sBAAM;MACNA,iCAAwE;MAAnCA;QAAA;MAAA,EAAiC;MAAtEA,iBAAwE;MACxEA,iCAAuB;MAACA,uBAAK;MAAAA,iBAAQ;MACrCA,sBAAM;MACNA,kCAAkE;MAAhCA;QAAA;MAAA,EAA8B;MAAhEA,iBAAkE;MAClEA,kCAAoB;MAACA,wBAAM;MAAAA,iBAAQ;MACnCA,sBAAM;MAGRA,iBAAO;;;MAjB0BA,eAA4B;MAA5BA,4CAA4B;MAG7BA,eAA2B;MAA3BA,2CAA2B;MAGxBA,eAA6B;MAA7BA,6CAA6B;MAGzBA,eAAiC;MAAjCA,iDAAiC;MAGpCA,eAA8B;MAA9BA,8CAA8B","names":["ProfessorFormComponent","constructor","professorService","id","name","cin","subject","email","telephone","etudiants","onSubmit","form","newProfessor","Object","assign","professor","add","subscribe","data","console","log","reset","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/service/test/src/app/components/professor-form/professor-form.component.ts","/Users/macbookpro/Desktop/service/test/src/app/components/professor-form/professor-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport Professor from 'src/app/entities/Professor';\nimport { ProfessorService } from 'src/app/services/professor.service';\n\n@Component({\n  selector: 'app-professor-form',\n  templateUrl: './professor-form.component.html',\n  styleUrls: ['./professor-form.component.css'],\n})\nexport class ProfessorFormComponent {\n  professor: Professor = {\n    id: 0,\n    name: '',\n    cin: '',\n    subject: '',\n    email: '',\n    telephone: '',\n    etudiants: [],\n  };\n\n  constructor(private professorService: ProfessorService) {}\n  onSubmit(form: NgForm) {\n    let newProfessor: Professor = Object.assign({}, this.professor); // Create a new Student object with the form data\n    this.professorService.add(newProfessor).subscribe((data) => {\n      console.log(\"data sent\",data);\n    });\n    form.reset(); // Reset the form\n  }\n}\n","<div>\n  <form #professorForm=\"ngForm\" (ngSubmit)=\"onSubmit(professorForm)\">\n    <input type=\"text\" name=\"name\" [(ngModel)]=\"professor.name\"/>\n    <label for=\"name\"> Full name</label>\n    <br /><br />\n    <input type=\"text\" name=\"cin\" [(ngModel)]=\"professor.cin\"/>\n    <label for=\"cin\"> CIN</label>\n    <br /><br />\n    <input type=\"text\" name=\"email\"  [(ngModel)]=\"professor.email\"/>\n    <label for=\"email\"> E-mail</label>\n    <br /><br />\n    <input type=\"text\" name=\"telephone\"  [(ngModel)]=\"professor.telephone\"/>\n    <label for=\"telephone\"> Phone</label>\n    <br /><br />\n    <input type=\"text\" name=\"groupe\"  [(ngModel)]=\"professor.groupe\"/>\n    <label for=\"groupe\"> Groupe</label>\n    <br /><br />\n    <input type=\"submit\" value=\"add\">\n    <br /><br />\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}