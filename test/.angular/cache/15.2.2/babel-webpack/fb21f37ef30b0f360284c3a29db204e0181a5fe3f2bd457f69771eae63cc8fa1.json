{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/student.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction StudentListComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subject_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", subject_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", subject_r4, \" \");\n  }\n}\nfunction StudentListComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"a\", 8);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const professor_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(professor_r5.cin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"routerLink\", \"/details/\" + professor_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(professor_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(professor_r5.subject);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(professor_r5.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(professor_r5.telephone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(professor_r5.etudiants.length);\n  }\n}\nexport class StudentListComponent {\n  constructor(studentService) {\n    this.studentService = studentService;\n  }\n  handleFilterChange(searchValue, groupeFilter) {\n    this.filtered = this.students.filter(student => student.name.toUpperCase().includes(searchValue.toUpperCase()) || student.email.toUpperCase().includes(searchValue.toUpperCase()) || student.cin.toUpperCase().includes(searchValue.toUpperCase()) || student.telephone.toUpperCase().includes(searchValue.toUpperCase())).filter(student => student.subject.toUpperCase().includes(subjectFilter.toUpperCase()));\n  }\n  ngOnInit() {\n    this.professorService.getProfessors().subscribe(data => {\n      this.professors = data;\n      this.filtered = this.professors;\n      this.subjects = this.getUniqueSubjects();\n    });\n  }\n  getUniqueSubjects() {\n    let subjects = this.professors.map(professor => professor.subject);\n    return Array.from(new Set(subjects));\n  }\n}\nStudentListComponent.ɵfac = function StudentListComponent_Factory(t) {\n  return new (t || StudentListComponent)(i0.ɵɵdirectiveInject(i1.StudentService));\n};\nStudentListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StudentListComponent,\n  selectors: [[\"app-student-list\"]],\n  decls: 24,\n  vars: 2,\n  consts: [[3, \"change\", \"keyup\"], [\"type\", \"search\", \"placeholder\", \"enter here to search\"], [\"search\", \"\"], [\"subject\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"routerLink\"]],\n  template: function StudentListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n      i0.ɵɵlistener(\"change\", function StudentListComponent_Template_div_change_1_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(3);\n        const _r1 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.handleFilterChange(_r0.value, _r1.value));\n      })(\"keyup\", function StudentListComponent_Template_div_keyup_1_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(3);\n        const _r1 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.handleFilterChange(_r0.value, _r1.value));\n      });\n      i0.ɵɵelement(2, \"input\", 1, 2);\n      i0.ɵɵelementStart(4, \"select\", null, 3)(6, \"option\", 4);\n      i0.ɵɵtext(7, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, StudentListComponent_option_8_Template, 2, 2, \"option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"table\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"CIN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"subject\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"studentsCount\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(23, StudentListComponent_tr_23_Template, 14, 7, \"tr\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.subjects);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filtered);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink, i4.NgSelectOption, i4.ɵNgSelectMultipleOption],\n  styles: [\"th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{\\n    padding: 16px;\\n    border: 1px solid black;\\n    margin: 0;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdHVkZW50LWxpc3Qvc3R1ZGVudC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLFNBQVM7RUFDWCIsInNvdXJjZXNDb250ZW50IjpbInRoLHRke1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","StudentListComponent","constructor","studentService","handleFilterChange","searchValue","groupeFilter","filtered","students","filter","student","name","toUpperCase","includes","email","cin","telephone","subject","subjectFilter","ngOnInit","professorService","getProfessors","subscribe","data","professors","subjects","getUniqueSubjects","map","professor","Array","from","Set","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/service/test/src/app/components/student-list/student-list.component.html","/Users/macbookpro/Desktop/service/test/src/app/components/student-list/student-list.component.ts"],"sourcesContent":["<div>\n  <div (change)=\"handleFilterChange(search.value,subject.value)\" (keyup)=\"handleFilterChange(search.value,subject.value)\">\n    <input type=\"search\" placeholder=\"enter here to search\" #search >\n  <select #subject>\n    <option value=\"\">All</option>\n    <option *ngFor=\"let subject of subjects\" value={{subject}}>\n      {{subject}}\n    </option>\n  </select>\n  </div>\n\n  <table>\n    <tr>\n      <th>CIN</th>\n      <th>name</th>\n      <th>subject</th>\n      <th>email</th>\n      <th>phone</th>\n      <th>studentsCount</th>\n    </tr>\n    <tr *ngFor=\"let professor of filtered\">\n      <td>{{professor.cin}}</td>\n      <td><a routerLink=\"{{'/details/'+professor.id}}\">{{professor.name}}</a></td>\n      <td>{{professor.subject}}</td>\n      <td>{{professor.email}}</td>\n      <td>{{professor.telephone}}</td>\n      <td>{{professor.etudiants.length}}</td>\n    </tr>\n  </table>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport Professor from 'src/app/entities/Professor';\nimport Student from 'src/app/entities/Student';\nimport { ProfessorService } from 'src/app/services/professor.service';\nimport { StudentService } from 'src/app/services/student.service';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit{\n\n  students!: Student[];\n  filtered!: Student[];\n  groups!:string[]\n\n  constructor(private studentService: StudentService) {}\n\n  handleFilterChange(searchValue: string, groupeFilter:string) {\n    this.filtered = this.students.filter(\n      (student) =>\n        student.name.toUpperCase().includes(searchValue.toUpperCase()) ||\n        student.email.toUpperCase().includes(searchValue.toUpperCase()) ||\n        student.cin.toUpperCase().includes(searchValue.toUpperCase()) ||\n        student.telephone.toUpperCase().includes(searchValue.toUpperCase())\n    ).filter(student => student.subject.toUpperCase().includes(subjectFilter.toUpperCase()));\n\n\n  }\n  ngOnInit(): void {\n    this.professorService.getProfessors().subscribe((data) => {\n      this.professors = data;\n      this.filtered = this.professors;\n      this.subjects = this.getUniqueSubjects();\n    });\n  }\n\n\n  getUniqueSubjects(): string[] {\n    let subjects = this.professors.map((professor) => professor.subject);\n    return Array.from(new Set(subjects));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}