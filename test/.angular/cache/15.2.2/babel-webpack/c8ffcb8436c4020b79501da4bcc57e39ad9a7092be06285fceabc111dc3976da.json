{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/professor.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AssignStudentComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const professor_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", professor_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", professor_r2.name, \" \");\n  }\n}\nexport class AssignStudentComponent {\n  onSubmit(formdata) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(professorService) {\n    this.professorService = professorService;\n  }\n  ngOnInit() {\n    this.professorService.getProfessors().subscribe(data => {\n      this.professors = data;\n    });\n  }\n}\nAssignStudentComponent.ɵfac = function AssignStudentComponent_Factory(t) {\n  return new (t || AssignStudentComponent)(i0.ɵɵdirectiveInject(i1.ProfessorService));\n};\nAssignStudentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AssignStudentComponent,\n  selectors: [[\"app-assign-student\"]],\n  decls: 10,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"studentForm\", \"ngForm\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"name\"], [\"type\", \"submit\", \"value\", \"assign\"], [3, \"value\"]],\n  template: function AssignStudentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AssignStudentComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(3, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function AssignStudentComponent_Template_select_ngModelChange_3_listener($event) {\n        return ctx.professorId = $event;\n      });\n      i0.ɵɵtemplate(4, AssignStudentComponent_option_4_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Assingn professor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5)(8, \"br\")(9, \"br\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.professorId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.professors);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAoBQA,iCAAoE;IAChEA,YACJ;IAAAA,iBAAS;;;;IAFoCA,kDAAsB;IAC/DA,eACJ;IADIA,kDACJ;;;ACZR,OAAM,MAAOC,sBAAsB;EACnCC,QAAQ,CAACC,QAAgB;IACzB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC1C;EAKEC,YAAoBC,gBAAiC;IAAjC,qBAAgB,GAAhBA,gBAAgB;EAAmB;EACvDC,QAAQ;IACN,IAAI,CAACD,gBAAgB,CAACE,aAAa,EAAE,CAACC,SAAS,CAACC,IAAI,IAAE;MACpD,IAAI,CAACC,UAAU,GAAGD,IAAI;IACxB,CAAC,CAAC;EACJ;;AAbWT,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDVnChB,2BAAK;MAC2BA;QAAAA;QAAA;QAAA,OAAYA,gCAAqB;MAAA,EAAC;MAkB5DA,iCAAkC;MAA1BA;QAAA;MAAA,EAAyB;MAC/BA,6EAES;MACXA,iBAAS;MACTA,gCAAkB;MAAAA,iCAAiB;MAAAA,iBAAQ;MAACA,2BAAoC;MAElFA,iBAAO;;;MAPGA,eAAyB;MAAzBA,yCAAyB;MACDA,eAAa;MAAbA,wCAAa","names":["i0","AssignStudentComponent","onSubmit","formdata","Error","constructor","professorService","ngOnInit","getProfessors","subscribe","data","professors","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\stagiaire7\\Documents\\GitHub\\Professors-service\\test\\src\\app\\components\\assign-student\\assign-student.component.html","C:\\Users\\stagiaire7\\Documents\\GitHub\\Professors-service\\test\\src\\app\\components\\assign-student\\assign-student.component.ts"],"sourcesContent":["<div>\r\n    <form #studentForm=\"ngForm\" (ngSubmit)=\"onSubmit(studentForm)\">\r\n      <!-- <input type=\"text\" name=\"name\" [(ngModel)]=\"student.name\"/>\r\n      <label for=\"name\"> Full name</label>\r\n      <br /><br />\r\n      <input type=\"text\" name=\"cin\" [(ngModel)]=\"student.cin\"/>\r\n      <label for=\"cin\"> CIN</label>\r\n      <br /><br />\r\n      <input type=\"text\" name=\"email\"  [(ngModel)]=\"student.email\"/>\r\n      <label for=\"email\"> E-mail</label>\r\n      <br /><br />\r\n      <input type=\"text\" name=\"telephone\"  [(ngModel)]=\"student.telephone\"/>\r\n      <label for=\"telephone\"> Phone</label>\r\n      <br /><br />\r\n      <input type=\"text\" name=\"groupe\"  [(ngModel)]=\"student.groupe\"/>\r\n      <label for=\"groupe\"> Groupe</label>\r\n      <br /><br />\r\n      <input type=\"submit\" value=\"add\">\r\n      <br /><br /> -->\r\n      <select [(ngModel)]=\"professorId\">\r\n        <option *ngFor=\"let professor of professors\" value={{professor.id}}>\r\n            {{professor.name}}\r\n        </option>\r\n      </select>\r\n      <label for=\"name\">Assingn professor</label> <input type=\"submit\" value=\"assign\">\r\n      <br /><br />\r\n    </form>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport Professor from 'src/app/entities/Professor';\r\nimport { ProfessorService } from 'src/app/services/professor.service';\r\n\r\n@Component({\r\n  selector: 'app-assign-student',\r\n  templateUrl: './assign-student.component.html',\r\n  styleUrls: ['./assign-student.component.css']\r\n})\r\nexport class AssignStudentComponent implements OnInit{\r\nonSubmit(formdata: NgForm) {\r\nthrow new Error('Method not implemented.');\r\n}\r\n\r\n  professors!:Professor[];\r\n  professorId!:number;\r\n\r\n  constructor(private professorService:ProfessorService){}\r\n  ngOnInit(): void {\r\n    this.professorService.getProfessors().subscribe(data=>{\r\n      this.professors = data;\r\n    })\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}