{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/student.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction StudentListComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const groupe_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", groupe_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", groupe_r4, \" \");\n  }\n}\nfunction StudentListComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"a\", 8);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const student_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r5.cin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"routerLink\", \"/student/\" + student_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(student_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r5.groupe);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r5.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r5.telephone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r5.professors.length);\n  }\n}\nexport class StudentListComponent {\n  constructor(studentService) {\n    this.studentService = studentService;\n  }\n  handleFilterChange(searchValue, groupeFilter) {\n    this.filtered = this.students.filter(student => student.name.toUpperCase().includes(searchValue.toUpperCase()) || student.email.toUpperCase().includes(searchValue.toUpperCase()) || student.cin.toUpperCase().includes(searchValue.toUpperCase()) || student.telephone.toUpperCase().includes(searchValue.toUpperCase())).filter(student => student.groupe.toUpperCase().includes(groupeFilter.toUpperCase()));\n  }\n  ngOnInit() {\n    this.studentService.getStudents().subscribe(data => {\n      this.students = data;\n      this.filtered = this.students;\n      this.groups = this.getUniqueGroups();\n    });\n  }\n  getUniqueGroups() {\n    let groups = this.students.map(student => student.groupe);\n    return Array.from(new Set(groups));\n  }\n}\nStudentListComponent.ɵfac = function StudentListComponent_Factory(t) {\n  return new (t || StudentListComponent)(i0.ɵɵdirectiveInject(i1.StudentService));\n};\nStudentListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StudentListComponent,\n  selectors: [[\"app-student-list\"]],\n  decls: 24,\n  vars: 2,\n  consts: [[3, \"change\", \"keyup\"], [\"type\", \"search\", \"placeholder\", \"enter here to search\"], [\"search\", \"\"], [\"groupe\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"routerLink\"]],\n  template: function StudentListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n      i0.ɵɵlistener(\"change\", function StudentListComponent_Template_div_change_1_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(3);\n        const _r1 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.handleFilterChange(_r0.value, _r1.value));\n      })(\"keyup\", function StudentListComponent_Template_div_keyup_1_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(3);\n        const _r1 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.handleFilterChange(_r0.value, _r1.value));\n      });\n      i0.ɵɵelement(2, \"input\", 1, 2);\n      i0.ɵɵelementStart(4, \"select\", null, 3)(6, \"option\", 4);\n      i0.ɵɵtext(7, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, StudentListComponent_option_8_Template, 2, 2, \"option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"table\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"CIN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"groupe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"professorsCount\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(23, StudentListComponent_tr_23_Template, 14, 7, \"tr\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filtered);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink, i4.NgSelectOption, i4.ɵNgSelectMultipleOption],\n  styles: [\"th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{\\r\\n    padding: 16px;\\r\\n    border: 1px solid black;\\r\\n    margin: 0;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdHVkZW50LWxpc3Qvc3R1ZGVudC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLFNBQVM7RUFDWCIsInNvdXJjZXNDb250ZW50IjpbInRoLHRke1xyXG4gICAgcGFkZGluZzogMTZweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","StudentListComponent","constructor","studentService","handleFilterChange","searchValue","groupeFilter","filtered","students","filter","student","name","toUpperCase","includes","email","cin","telephone","groupe","ngOnInit","getStudents","subscribe","data","groups","getUniqueGroups","map","Array","from","Set","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\stagiaire7\\Documents\\GitHub\\Professors-service\\test\\src\\app\\components\\student-list\\student-list.component.html","C:\\Users\\stagiaire7\\Documents\\GitHub\\Professors-service\\test\\src\\app\\components\\student-list\\student-list.component.ts"],"sourcesContent":["<div>\r\n  <div (change)=\"handleFilterChange(search.value,groupe.value)\" (keyup)=\"handleFilterChange(search.value,groupe.value)\">\r\n    <input type=\"search\" placeholder=\"enter here to search\" #search >\r\n  <select #groupe>\r\n    <option value=\"\">All</option>\r\n    <option *ngFor=\"let groupe of groups\" value={{groupe}}>\r\n      {{groupe}}\r\n    </option>\r\n  </select>\r\n  </div>\r\n\r\n  <table>\r\n    <tr>\r\n      <th>CIN</th>\r\n      <th>name</th>\r\n      <th>groupe</th>\r\n      <th>email</th>\r\n      <th>phone</th>\r\n      <th>professorsCount</th>\r\n    </tr>\r\n    <tr *ngFor=\"let student of filtered\">\r\n      <td>{{student.cin}}</td>\r\n      <td><a routerLink=\"{{'/student/'+student.id}}\">{{student.name}}</a></td>\r\n      <td>{{student.groupe}}</td>\r\n      <td>{{student.email}}</td>\r\n      <td>{{student.telephone}}</td>\r\n      <td>{{student.professors.length}}</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport Professor from 'src/app/entities/Professor';\r\nimport Student from 'src/app/entities/Student';\r\nimport { ProfessorService } from 'src/app/services/professor.service';\r\nimport { StudentService } from 'src/app/services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-student-list',\r\n  templateUrl: './student-list.component.html',\r\n  styleUrls: ['./student-list.component.css']\r\n})\r\nexport class StudentListComponent implements OnInit{\r\n\r\n  students!: Student[];\r\n  filtered!: Student[];\r\n  groups!:string[]\r\n\r\n  constructor(private studentService: StudentService) {}\r\n\r\n  handleFilterChange(searchValue: string, groupeFilter:string) {\r\n    this.filtered = this.students.filter(\r\n      (student) =>\r\n        student.name.toUpperCase().includes(searchValue.toUpperCase()) ||\r\n        student.email.toUpperCase().includes(searchValue.toUpperCase()) ||\r\n        student.cin.toUpperCase().includes(searchValue.toUpperCase()) ||\r\n        student.telephone.toUpperCase().includes(searchValue.toUpperCase())\r\n    ).filter(student => student.groupe.toUpperCase().includes(groupeFilter.toUpperCase()));\r\n\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.studentService.getStudents().subscribe((data) => {\r\n      this.students = data;\r\n      this.filtered = this.students;\r\n      this.groups = this.getUniqueGroups();\r\n    });\r\n  }\r\n\r\n\r\n  getUniqueGroups(): string[] {\r\n    let groups = this.students.map((student) => student.groupe);\r\n    return Array.from(new Set(groups));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}