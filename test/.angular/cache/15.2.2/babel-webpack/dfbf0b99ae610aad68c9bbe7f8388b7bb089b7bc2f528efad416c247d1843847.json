{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/student.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/professor.service\";\nexport class StudDetailsComponent {\n  constructor(studentService, route, professorService) {\n    this.studentService = studentService;\n    this.route = route;\n    this.professorService = professorService;\n  }\n  ngOnInit() {\n    console.log(\"initialized\");\n    console.log(this.route.snapshot.paramMap.get('id'));\n    let id = parseInt(this.route.snapshot.paramMap.get('id') || \"\");\n    this.studentService.getStudent(id).subscribe(data => {\n      this.student = data;\n      this.professorService.getProfessorsList(this.student.professors).subscribe(data => {\n        this.professors = data;\n        console.log(data);\n        this.filtered = this.professors;\n        this.subjects = this.getUniqueSubjects();\n      });\n    });\n  }\n  handleFilterChange(searchValue, subjectFilter) {\n    this.filtered = this.professors.filter(professor => professor.name.toUpperCase().includes(searchValue.toUpperCase()) || professor.email.toUpperCase().includes(searchValue.toUpperCase()) || professor.cin.toUpperCase().includes(searchValue.toUpperCase()) || professor.telephone.toUpperCase().includes(searchValue.toUpperCase())).filter(professor => professor.subject.toUpperCase().includes(subjectFilter.toUpperCase()));\n  }\n  getUniqueSubjects() {\n    let subjects = this.professors.map(professor => professor.subject);\n    return Array.from(new Set(subjects));\n  }\n}\nStudDetailsComponent.ɵfac = function StudDetailsComponent_Factory(t) {\n  return new (t || StudDetailsComponent)(i0.ɵɵdirectiveInject(i1.StudentService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ProfessorService));\n};\nStudDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StudDetailsComponent,\n  selectors: [[\"app-stud-details\"]],\n  decls: 2,\n  vars: 0,\n  template: function StudDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"stud-details works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAM/BC,YAAoBC,cAA6B,EAASC,KAAoB,EAAUC,gBAAiC;IAArG,mBAAc,GAAdF,cAAc;IAAwB,UAAK,GAALC,KAAK;IAAyB,qBAAgB,GAAhBC,gBAAgB;EAAmB;EAC3HC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnD,IAAIC,EAAE,GAAGC,QAAQ,CAAC,IAAI,CAACT,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,IAAE,EAAE,CAAC;IAC7D,IAAI,CAACR,cAAc,CAACW,UAAU,CAACF,EAAE,CAAC,CAACG,SAAS,CAACC,IAAI,IAAG;MAClD,IAAI,CAACC,OAAO,GAAGD,IAAI;MACnB,IAAI,CAACX,gBAAgB,CAACa,iBAAiB,CAAC,IAAI,CAACD,OAAO,CAACE,UAAU,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAE;QAC/E,IAAI,CAACG,UAAU,GAAEH,IAAI;QACrBT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;QACjB,IAAI,CAACI,QAAQ,GAAG,IAAI,CAACD,UAAU;QACjC,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACC,iBAAiB,EAAE;MACxC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAC,kBAAkB,CAACC,WAAmB,EAAEC,aAAoB;IAC1D,IAAI,CAACL,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACO,MAAM,CACnCC,SAAS,IACRA,SAAS,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACN,WAAW,CAACK,WAAW,EAAE,CAAC,IAChEF,SAAS,CAACI,KAAK,CAACF,WAAW,EAAE,CAACC,QAAQ,CAACN,WAAW,CAACK,WAAW,EAAE,CAAC,IACjEF,SAAS,CAACK,GAAG,CAACH,WAAW,EAAE,CAACC,QAAQ,CAACN,WAAW,CAACK,WAAW,EAAE,CAAC,IAC/DF,SAAS,CAACM,SAAS,CAACJ,WAAW,EAAE,CAACC,QAAQ,CAACN,WAAW,CAACK,WAAW,EAAE,CAAC,CACxE,CAACH,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACO,OAAO,CAACL,WAAW,EAAE,CAACC,QAAQ,CAACL,aAAa,CAACI,WAAW,EAAE,CAAC,CAAC;EAG9F;EAEAP,iBAAiB;IACf,IAAID,QAAQ,GAAG,IAAI,CAACF,UAAU,CAACgB,GAAG,CAAER,SAAS,IAAKA,SAAS,CAACO,OAAO,CAAC;IACpE,OAAOE,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACjB,QAAQ,CAAC,CAAC;EACtC;;AArCWpB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAsC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,yBAAG;MAAAA,mCAAmB;MAAAA,iBAAI","names":["StudDetailsComponent","constructor","studentService","route","professorService","ngOnInit","console","log","snapshot","paramMap","get","id","parseInt","getStudent","subscribe","data","student","getProfessorsList","professors","filtered","subjects","getUniqueSubjects","handleFilterChange","searchValue","subjectFilter","filter","professor","name","toUpperCase","includes","email","cin","telephone","subject","map","Array","from","Set","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\stagiaire7\\Documents\\GitHub\\Professors-service\\test\\src\\app\\components\\stud-details\\stud-details.component.ts","C:\\Users\\stagiaire7\\Documents\\GitHub\\Professors-service\\test\\src\\app\\components\\stud-details\\stud-details.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Professor from 'src/app/entities/Professor';\r\nimport Student from 'src/app/entities/Student';\r\nimport { ProfessorService } from 'src/app/services/professor.service';\r\nimport { StudentService } from 'src/app/services/student.service';\r\n@Component({\r\n  selector: 'app-stud-details',\r\n  templateUrl: './stud-details.component.html',\r\n  styleUrls: ['./stud-details.component.css']\r\n})\r\nexport class StudDetailsComponent implements OnInit{\r\n\r\n  student!:Student;\r\n  professors!:Professor[];\r\n  filtered!: Professor[];\r\n  subjects!: string[];\r\n  constructor(private studentService:StudentService,private route:ActivatedRoute, private professorService:ProfessorService){}\r\n  ngOnInit(): void {\r\n    console.log(\"initialized\");\r\n    console.log(this.route.snapshot.paramMap.get('id'));\r\n    let id = parseInt(this.route.snapshot.paramMap.get('id')||\"\")\r\n    this.studentService.getStudent(id).subscribe(data => {\r\n      this.student = data;\r\n      this.professorService.getProfessorsList(this.student.professors).subscribe(data=>{\r\n        this.professors= data;\r\n        console.log(data);\r\n        this.filtered = this.professors;\r\n      this.subjects = this.getUniqueSubjects();\r\n      })\r\n    })\r\n  }\r\n\r\n  handleFilterChange(searchValue: string, subjectFilter:string) {\r\n    this.filtered = this.professors.filter(\r\n      (professor) =>\r\n        professor.name.toUpperCase().includes(searchValue.toUpperCase()) ||\r\n        professor.email.toUpperCase().includes(searchValue.toUpperCase()) ||\r\n        professor.cin.toUpperCase().includes(searchValue.toUpperCase()) ||\r\n        professor.telephone.toUpperCase().includes(searchValue.toUpperCase())\r\n    ).filter(professor => professor.subject.toUpperCase().includes(subjectFilter.toUpperCase()));\r\n\r\n\r\n  }\r\n\r\n  getUniqueSubjects(): string[] {\r\n    let subjects = this.professors.map((professor) => professor.subject);\r\n    return Array.from(new Set(subjects));\r\n  }\r\n\r\n}\r\n\r\n","<p>stud-details works!</p>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}